# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres
        env:
          APP_DB_USERNAME: postgres
          APP_DB_PASSWORD: cont_del
          APP_DB_NAME: postgres
        ports:
        - 5432:5432
                # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
  
    - name: Test
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports['5432'] }}
        APP_DB_USERNAME: postgres
        APP_DB_PASSWORD: cont_del
        APP_DB_NAME: postgres
      run: go test -v ./...

    - name: Build
      run: go build -v ./...

